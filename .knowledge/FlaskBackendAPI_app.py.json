{"is_source_file": true, "format": "Python", "description": "This file defines a Flask web application with a health check endpoint. It initializes the app with environment-configurable settings such as CORS origins, secret key, and optional MongoDB connectivity checks. The main functionality is to provide a /health endpoint that reports service status, version, and optional database connection status.", "external_files": ["flask", "flask_cors", "dotenv", "pymongo"], "external_methods": ["Flask", "jsonify", "request", "CORS", "load_dotenv", "MongoClient"], "published": ["create_app"], "classes": [], "methods": [{"name": "Flask create_app()", "description": "Creates and configures a Flask application with CORS support and a health check route.", "scope": "", "scopeKind": ""}, {"name": "health()", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}], "calls": ["os.getenv", "load_dotenv", "Flask", "app.config", "CORS", "app.get", "jsonify", "request.headers.get", "MongoClient", "client.admin.command", "client.close"], "search-terms": ["Flask app creation", "health endpoint", "MongoDB connectivity check", "CORS configuration", "environment variable configuration"], "state": 2, "file_id": 2, "knowledge_revision": 9, "git_revision": "f1f10b3426609d4f2a4f7981808d533001742235", "revision_history": [{"6": "f1f10b3426609d4f2a4f7981808d533001742235"}, {"9": "f1f10b3426609d4f2a4f7981808d533001742235"}], "ctags": [{"_type": "tag", "name": "MongoClient", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app.py", "pattern": "/^    MongoClient = None  # type: ignore$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app.py", "pattern": "/^    app = create_app()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_app", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app.py", "pattern": "/^def create_app() -> Flask:$/", "language": "Python", "typeref": "typename:Flask", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app.py", "pattern": "/^    def health():$/", "file": true, "language": "Python", "kind": "function", "signature": "()", "scope": "create_app", "scopeKind": "function"}], "hash": "c45a8d5ac5d4f67259cdd5e2a8b45357", "format-version": 4, "code-base-name": "FlaskBackendAPI", "filename": "FlaskBackendAPI/app.py", "fields": [{"name": "MongoClient = None  # type: ignore", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = create_app()", "scope": "", "scopeKind": "", "description": "unavailable"}]}