{"is_source_file": true, "format": "Python", "description": "This is the main initialization script for a Flask web application, setting up configurations, CORS, API metadata, error handlers, and registering blueprints for various API routes.", "external_files": [".config", ".routes.health", ".routes.devices", ".routes.status", ".routes.docs"], "external_methods": ["get_config", "blp as health_blp", "blp as devices_blp", "blp as status_blp", "blp as docs_blp"], "published": [], "classes": [], "methods": [{"name": "handle_400(e)", "description": "Error handler for 400 Bad Request, returns a JSON error response.", "scope": "", "scopeKind": ""}, {"name": "handle_404(e)", "description": "Error handler for 404 Not Found, returns a JSON error response.", "scope": "", "scopeKind": ""}, {"name": "handle_500(e)", "description": "Error handler for 500 Internal Server Error, returns a JSON error response.", "scope": "", "scopeKind": ""}], "calls": ["flask.Flask", "flask.jsonify", "flask_cors.CORS", "flask_smorest.Api", "app.config", "app.errorhandler", "api.register_blueprint"], "search-terms": ["Flask app initialization", "API metadata configuration", "error handlers Flask", "blueprint registration", "CORS configuration"], "state": 2, "file_id": 2, "knowledge_revision": 34, "git_revision": "22bf826b758ef5002ac8b1afad51c743c8b077dc", "revision_history": [{"12": "22bf826b758ef5002ac8b1afad51c743c8b077dc"}, {"26": "22bf826b758ef5002ac8b1afad51c743c8b077dc"}, {"34": "22bf826b758ef5002ac8b1afad51c743c8b077dc"}], "ctags": [{"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/__init__.py", "pattern": "/^api = Api(app)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/__init__.py", "pattern": "/^app = Flask(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "cfg", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/__init__.py", "pattern": "/^cfg = get_config()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "devices_blp", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/__init__.py", "pattern": "/^from .routes.devices import blp as devices_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "docs_blp", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/__init__.py", "pattern": "/^from .routes.docs import blp as docs_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "handle_400", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/__init__.py", "pattern": "/^def handle_400(e):$/", "language": "Python", "kind": "function", "signature": "(e)"}, {"_type": "tag", "name": "handle_404", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/__init__.py", "pattern": "/^def handle_404(e):$/", "language": "Python", "kind": "function", "signature": "(e)"}, {"_type": "tag", "name": "handle_500", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/__init__.py", "pattern": "/^def handle_500(e):$/", "language": "Python", "kind": "function", "signature": "(e)"}, {"_type": "tag", "name": "health_blp", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/__init__.py", "pattern": "/^from .routes.health import blp as health_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "status_blp", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/__init__.py", "pattern": "/^from .routes.status import blp as status_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}], "hash": "c3913518d98546113ea7fde118018b8a", "format-version": 4, "code-base-name": "FlaskBackendAPI", "filename": "FlaskBackendAPI/app/__init__.py", "fields": [{"name": "api = Api(app)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = Flask(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "cfg = get_config()", "scope": "", "scopeKind": "", "description": "unavailable"}]}