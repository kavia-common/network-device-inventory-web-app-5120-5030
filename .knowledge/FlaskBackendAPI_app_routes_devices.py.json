{"is_source_file": true, "format": "Python", "description": "This file defines REST API endpoints for CRUD operations on network device resources using Flask, Flask-Smorest, and MongoDB.", "external_files": ["../auth", "../db", "../schemas"], "external_methods": ["require_api_key", "get_db", "DeviceSchema", "ObjectId", "request.get_json", "jsonify", "datetime.utcnow"], "published": ["DevicesCollection", "DeviceItem"], "classes": [{"name": "DevicesCollection", "description": "Provides endpoints for listing all devices and creating a new device."}, {"name": "DeviceItem", "description": "Provides endpoints for retrieving, updating, and deleting a specific device by ID."}], "methods": [{"name": "Dict[str,Any] _serialize_device(doc: Dict[str, Any])", "description": "Serializes a device document into a dictionary using DeviceSchema.", "scope": "", "scopeKind": ""}, {"name": "get(self)", "description": "Handles GET requests for list of all devices.", "scope": "DevicesCollection", "scopeKind": "class"}, {"name": "post(self)", "description": "Handles POST requests to create a new device.", "scope": "DevicesCollection", "scopeKind": "class"}, {"name": "get(self, device_id: str)", "description": "Handles GET requests for a specific device by ID.", "scope": "DeviceItem", "scopeKind": "class"}, {"name": "put(self, device_id: str)", "description": "Handles PUT requests to update a specific device by ID.", "scope": "DeviceItem", "scopeKind": "class"}, {"name": "delete(self, device_id: str)", "description": "Handles DELETE requests to delete a device by ID.", "scope": "DeviceItem", "scopeKind": "class"}], "calls": ["get_db()", "DeviceSchema().dump()", "request.get_json()", "schema.load()", "devices_col.insert_one()", "ObjectId()", "devices_col.find_one()", "devices_col.update_one()", "devices_col.delete_one()", "datetime.utcnow()", "jsonify()"], "search-terms": ["devices.py", "Flask API", "MongoDB CRUD", "Network Device API", "DeviceSchema", "ObjectId handling"], "state": 2, "file_id": 11, "knowledge_revision": 35, "git_revision": "672b11933791d91bc3ff5765a5d8d541cb58787c", "revision_history": [{"22": ""}, {"35": "672b11933791d91bc3ff5765a5d8d541cb58787c"}], "ctags": [{"_type": "tag", "name": "DeviceItem", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/routes/devices.py", "pattern": "/^class DeviceItem(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DevicesCollection", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/routes/devices.py", "pattern": "/^class DevicesCollection(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_serialize_device", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/routes/devices.py", "pattern": "/^def _serialize_device(doc: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(doc: Dict[str, Any])"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/routes/devices.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/routes/devices.py", "pattern": "/^    def delete(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceItem", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/routes/devices.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DevicesCollection", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/routes/devices.py", "pattern": "/^    def get(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceItem", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/routes/devices.py", "pattern": "/^    def post(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DevicesCollection", "scopeKind": "class"}, {"_type": "tag", "name": "put", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/routes/devices.py", "pattern": "/^    def put(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceItem", "scopeKind": "class"}], "hash": "145fc97ecb3b7e50380c057a59031dc9", "format-version": 4, "code-base-name": "FlaskBackendAPI", "filename": "FlaskBackendAPI/app/routes/devices.py", "fields": [{"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}]}