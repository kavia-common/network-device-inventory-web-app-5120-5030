{"is_source_file": true, "format": "Python", "description": "This file defines data schemas for network device models, including custom fields, validation logic, and data serialization/deserialization rules using marshmallow. It includes schemas for device information, device status, and error responses.", "external_files": ["bson.ObjectId", "marshmallow.Schema", "marshmallow.fields", "marshmallow.validates", "marshmallow.ValidationError", "marshmallow.post_dump"], "external_methods": ["re.compile", "datetime.now", "ObjectId", "Schema", "fields", "validates", "ValidationError", "post_dump"], "published": ["ObjectIdField", "DeviceSchema", "DeviceStatusSchema", "ErrorResponseSchema"], "classes": [{"name": "ObjectIdField", "description": "Custom marshmallow field for serializing/deserializing MongoDB ObjectId values."}, {"name": "DeviceSchema", "description": "Schema representing a network device with validation for IP and MAC addresses."}, {"name": "DeviceStatusSchema", "description": "Schema representing the online/offline status of a device with timestamp formatting."}, {"name": "ErrorResponseSchema", "description": "Schema for standard error response payload."}], "methods": [{"name": "_serialize(self, value: Any, attr: str, obj: Any, **kwargs)", "description": "Serializes ObjectId or string to string for output.", "scope": "ObjectIdField", "scopeKind": "class"}, {"name": "_deserialize(self, value: Any, attr: str, data: Any, **kwargs)", "description": "Deserializes string or ObjectId into MongoDB ObjectId.", "scope": "ObjectIdField", "scopeKind": "class"}, {"name": "validate_ip(self, value: str)", "description": "Validates that an IP address string is correctly formatted IPv4.", "scope": "DeviceSchema", "scopeKind": "class"}, {"name": "validate_mac(self, value: str)", "description": "Validates that a MAC address string matches expected format.", "scope": "DeviceSchema", "scopeKind": "class"}, {"name": "ensure_id_str(self, data: Dict[str, Any], many: bool, **kwargs)", "description": "Ensures the 'id' field is serialized as a string.", "scope": "DeviceSchema", "scopeKind": "class"}, {"name": "isoformat_last_checked(self, data: Dict[str, Any], many: bool, **kwargs)", "description": "Converts datetime to ISO format string for serialization.", "scope": "DeviceStatusSchema", "scopeKind": "class"}], "calls": ["re.compile", "datetime.isoformat", "ObjectId", "ValidationError"], "search-terms": ["ObjectIdField", "DeviceSchema", "DeviceStatusSchema", "ErrorResponseSchema", "marshmallow", "validation", "network device"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "DeviceSchema", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^class DeviceSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DeviceStatusSchema", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^class DeviceStatusSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ErrorResponseSchema", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^class ErrorResponseSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ObjectIdField", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^class ObjectIdField(fields.Field):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_deserialize", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    def _deserialize(self, value: Any, attr: str, data: Any, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, value: Any, attr: str, data: Any, **kwargs)", "scope": "ObjectIdField", "scopeKind": "class"}, {"_type": "tag", "name": "_serialize", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    def _serialize(self, value: Any, attr: str, obj: Any, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, value: Any, attr: str, obj: Any, **kwargs)", "scope": "ObjectIdField", "scopeKind": "class"}, {"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    details = fields.String(allow_none=True)$/", "language": "Python", "kind": "variable", "scope": "ErrorResponseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "ensure_id_str", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    def ensure_id_str(self, data: Dict[str, Any], many: bool, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, data: Dict[str, Any], many: bool, **kwargs)", "scope": "DeviceSchema", "scopeKind": "class"}, {"_type": "tag", "name": "error_code", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    error_code = fields.String(required=True)$/", "language": "Python", "kind": "variable", "scope": "ErrorResponseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    id = ObjectIdField(attribute=\"_id\", dump_only=True, metadata={\"description\": \"Unique device /", "language": "Python", "kind": "variable", "scope": "DeviceSchema", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    id = fields.String(required=True, metadata={\"description\": \"Device ID\"})$/", "language": "Python", "kind": "variable", "scope": "DeviceStatusSchema", "scopeKind": "class"}, {"_type": "tag", "name": "ip_address", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    ip_address = fields.String(required=True, metadata={\"description\": \"Device IP address\"})$/", "language": "Python", "kind": "variable", "scope": "DeviceSchema", "scopeKind": "class"}, {"_type": "tag", "name": "ipv4_regex", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^ipv4_regex = re.compile(r\"^(?:[0-9]{1,3}\\\\.){3}[0-9]{1,3}$\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "isoformat_last_checked", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    def isoformat_last_checked(self, data: Dict[str, Any], many: bool, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, data: Dict[str, Any], many: bool, **kwargs)", "scope": "DeviceStatusSchema", "scopeKind": "class"}, {"_type": "tag", "name": "last_checked", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    last_checked = fields.DateTime(required=True, metadata={\"description\": \"Timestamp of last st/", "language": "Python", "kind": "variable", "scope": "DeviceStatusSchema", "scopeKind": "class"}, {"_type": "tag", "name": "location", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    location = fields.String(required=True, metadata={\"description\": \"Physical location\"})$/", "language": "Python", "kind": "variable", "scope": "DeviceSchema", "scopeKind": "class"}, {"_type": "tag", "name": "mac_address", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    mac_address = fields.String(required=True, metadata={\"description\": \"Device MAC address\"})$/", "language": "Python", "kind": "variable", "scope": "DeviceSchema", "scopeKind": "class"}, {"_type": "tag", "name": "mac_regex", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^mac_regex = re.compile(r\"^([0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}$\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    message = fields.String(required=True)$/", "language": "Python", "kind": "variable", "scope": "ErrorResponseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    name = fields.String(required=True, metadata={\"description\": \"Device name\"})$/", "language": "Python", "kind": "variable", "scope": "DeviceSchema", "scopeKind": "class"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    status = fields.String(required=True, metadata={\"description\": \"Device status: online or off/", "language": "Python", "kind": "variable", "scope": "DeviceStatusSchema", "scopeKind": "class"}, {"_type": "tag", "name": "type", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    type = fields.String(required=True, data_key=\"type\", attribute=\"device_type\",$/", "language": "Python", "kind": "variable", "scope": "DeviceSchema", "scopeKind": "class"}, {"_type": "tag", "name": "validate_ip", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    def validate_ip(self, value: str):$/", "language": "Python", "kind": "member", "signature": "(self, value: str)", "scope": "DeviceSchema", "scopeKind": "class"}, {"_type": "tag", "name": "validate_mac", "path": "/home/kavia/workspace/code-generation/network-device-inventory-web-app-5120-5030/FlaskBackendAPI/app/schemas.py", "pattern": "/^    def validate_mac(self, value: str):$/", "language": "Python", "kind": "member", "signature": "(self, value: str)", "scope": "DeviceSchema", "scopeKind": "class"}], "hash": "7062fc4ec220037eeeb3c483d4db0183", "format-version": 4, "code-base-name": "FlaskBackendAPI", "filename": "FlaskBackendAPI/app/schemas.py", "fields": [{"name": "details = fields.String(allow_none=True)", "scope": "ErrorResponseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "error_code = fields.String(required=True)", "scope": "ErrorResponseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "id = ObjectIdField(attribute=\"_id\", dump_only=True, metadata={\"description\": \"Unique device /", "scope": "DeviceSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "id = fields.String(required=True, metadata={\"description\": \"Device ID\"})", "scope": "DeviceStatusSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "ip_address = fields.String(required=True, metadata={\"description\": \"Device IP address\"})", "scope": "DeviceSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "ipv4_regex = re.compile(r\"^(?:[0-9]{1,3}\\\\.){3}[0-9]{1,3}$\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "last_checked = fields.DateTime(required=True, metadata={\"description\": \"Timestamp of last st/", "scope": "DeviceStatusSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "location = fields.String(required=True, metadata={\"description\": \"Physical location\"})", "scope": "DeviceSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "mac_address = fields.String(required=True, metadata={\"description\": \"Device MAC address\"})", "scope": "DeviceSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "mac_regex = re.compile(r\"^([0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}$\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "message = fields.String(required=True)", "scope": "ErrorResponseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "name = fields.String(required=True, metadata={\"description\": \"Device name\"})", "scope": "DeviceSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "status = fields.String(required=True, metadata={\"description\": \"Device status: online or off/", "scope": "DeviceStatusSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "type = fields.String(required=True, data_key=\"type\", attribute=\"device_type\",", "scope": "DeviceSchema", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"19": ""}]}